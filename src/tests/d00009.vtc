varnishtest "Test dynamic load-balancing method"


server s1 {
	loop 5 {
		rxreq
		txresp
	}
} -start

varnish v1 -vcl+backend {
	import unidirectors from "${vmod_topbuild}/src/.libs/libvmod_unidirectors.so";

	sub vcl_init {
		new udir = unidirectors.director();
		udir.add_backend(s1);
	}

	sub vcl_recv {
		if (req.url == "/random") {
			udir.random();
		}
		if (req.url == "/round_robin") {
			udir.round_robin();
		}
		if (req.url == "/leastconn") {
			udir.leastconn();
		}
		if (req.url == "/hash") {
			udir.hash("client-identity");
		}
		if (req.url == "/fallback") {
			udir.fallback();
		}
		set req.backend_hint = udir.backend();
	}

	sub vcl_backend_fetch {
		set bereq.http.director = unidirectors.backend_type(bereq.backend);
	}
	sub vcl_backend_response {
		set beresp.http.director = bereq.http.director;
	}
	sub vcl_backend_error {
		set beresp.http.director = bereq.http.director;
	}

} -start

client c1 {
	timeout 3
	txreq -url "/"
	rxresp
	expect resp.status == 503
	expect resp.http.director == "raw"
	txreq -url "/random"
	rxresp
	expect resp.status == 200
	expect resp.http.director == "random"
	txreq -url "/round_robin"
	rxresp
	expect resp.status == 200
	expect resp.http.director == "round-robin"
	txreq -url "/leastconn"
	rxresp
	expect resp.status == 200
	expect resp.http.director == "least-connections"
	txreq -url "/hash"
	rxresp
	expect resp.status == 200
	expect resp.http.director == "hash"
	txreq -url "/fallback"
	rxresp
	expect resp.status == 200
	expect resp.http.director == "fallback"
} -run
